const campos = document.querySelectorAll('.required');
const spans = document.querySelectorAll('.error-message');
// Expressões regulares para validação
const nameRegex = /^(?![ ])(?!.*[ ]{2})((?:e|da|do|das|dos|de|d'|D'|la|las|el|los)\s*?|(?:[A-Z][^\s]*\s*?)(?!.*[ ]$))+$/; // Nome com letras e espacos 
const cpfRegex = /^[0-9]{3}\.?[0-9]{3}\.?[0-9]{3}\-?[0-9]{2}/; // CPF no formato xxx.xxx.xxx-xx
const telRegex = /^(1[1-9]|[4689][0-9]|2[12478]|3([1-5]|[7-8])|5([13-5])|7[193-7])9[0-9]{8}$/; // Telefone no formato (xx) xxxx-xxxx ou (xx) xxxxx-xxxx
const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/; // Email válido
const passwordRegex = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/; // Senha forte (mínimo 8 caracteres, com pelo menos 1 número, 1 letra maiúscula e 1 letra minúscula)

// Funções para setar ou remover erro nos campos
function setError(input, errorMessage) {
  campos[input].classList.add('campoInvalido');
  spans[input].style.display = 'block';
  spans[input].textContent = errorMessage;
  document.getElementById("btn-enviar").disabled = true;
  document.getElementById("btn-enviar").style.opacity = '50%';
}

function removeError(input) {
  campos[input].classList.remove('campoInvalido');
  spans[input].style.display = 'none';
  spans[input].textContent = '';
  document.getElementById("btn-enviar").disabled = false;
  document.getElementById("btn-enviar").style.opacity = '100%';
}

// Funções para validar os campos específicos com o regex
function nameValide(){ // validar o nome
  if (!nameRegex.test(campos[0].value)) {
    setError(0, 'Digite um nome válido');
  } else {
    removeError(0);
  }
}
// valida o CPF
function cpfValide() {
  if (!cpfRegex.test(campos[1].value)) {
      setError(1, 'Digite um CPF válido (xxx.xxx.xxx-xx)');
  } else {
      removeError(1);
  }
}
// Valida a idade acima de 18 anos
function ageValide() { 
  var birthdate = new Date(campos[2].value);
  var today = new Date();

  var diff = today - birthdate;
  var age = Math.floor(diff / (1000 * 60 * 60 * 24 * 365.25)); // Calcula a idade em anos

  if (age >= 18) {
      // O usuário tem 18 anos ou mais, pode prosseguir com o envio do formulário
      removeError(2);
  } else {
      // O usuário é menor de 18 anos, exiba uma mensagem de erro ou realize outra ação apropriada
      setError(2, 'Você deve ter mais de 18 anos');
  }
}
// valida o formato do telefone e DDD
function telValide() {
    if (!telRegex.test(campos[3].value)) {
        setError(3, 'Digite um telefone válido');
    } else {
        removeError(3);
    }
}

function emailValide() {
  if (!emailRegex.test(campos[4].value)) {
      setError(4, 'Digite um email válido');
  } else {
      removeError(4);
  }
}

function mainPasswordValide() {
  if (!passwordRegex.test(campos[5].value)) {
      setError(5, 'A senha deve conter pelo menos 8 caracteres, incluindo 1 número, 1 letra maiúscula e 1 letra minúscula');
  } else {
      removeError(5);
      comparePassword();
  }
}

function comparePassword() {
  if (campos[6].value == campos[5].value && passwordRegex.test(campos[6].value)) {
      removeError(6);
  } else {
      setError(6, 'As senhas devem ser iguais');
  }
}

// Event listeners para validar os campos em tempo real
document.getElementById('idname').addEventListener('input', function() {
  nameValide();
});

document.getElementById('idcpf').addEventListener('input', function() {
  cpfValide();
});

document.getElementById('idbirthdate').addEventListener('input', function() {
  ageValide();
});

document.getElementById('idtel').addEventListener('input', function() {
  telValide();
});

document.getElementById('idemail').addEventListener('input', function() {
  emailValide();
});

document.getElementById('idpwd').addEventListener('input', function() {
  mainPasswordValide();
});

document.getElementById('idpwd2').addEventListener('input', function() {
  comparePassword();
});

export { nameValide, cpfValide, ageValide, telValide, emailValide, mainPasswordValide, comparePassword };